# author: Josh Washburn
# date created: 2-13-2021 
# version: 1.0
# purpose: create a report of NICs in all subscriptions
#########################################################

# report of all NICs across all subscriptions

# get the date 
$date = Get-Date -Format "MM_dd_yyyy_HH_mm"

# create a folder called powershell
New-Item -Path "c:\" -Name "powershell" -ItemType "directory"

# set the path where the report will be created
$path = "c:\powershell\"+"nic_report_"+$date+".csv"

# get all subscriptions
$subs = Get-AzSubscription

foreach ($sub in $subs) {

    # select the subscription
    Set-AzContext -SubscriptionName $sub.Name

    # create and empty array
    $report = @()

    # get all NICs
    $nics = get-aznetworkinterface
 
    # build the report by selecting specific NIC properties
    foreach ($nic in $nics) {
        $info = "" | Select NicName, IpAddress, AllocationMethod, EnableIpForwarding, VirtualMachine, Subscription
        $info.NicName = $nic.Name
        $info.IpAddress = $nic.IpConfigurations.PrivateIpAddress
        $info.AllocationMethod = $nic.IpConfigurations.PrivateIpAllocationMethod
        $info.EnableIpForwarding = $nic.EnableIPForwarding
        $info.Subscription = $sub.Name
    
        # the expression below parses the resource ID so the result is only the virtual machine name
        # this avoids having to see the full path of the resource ID in the results
        # errors can be ignored since some NICs may not be attached to a virtual machine
        # if that is the case the expression will have a $null value and display an error
        $info.VirtualMachine = $nic.VirtualMachine.Id.tostring().substring($nic.VirtualMachine.Id.tostring().lastindexof('/')+1)
    
        # create a new array with all the data from the $info variable
        # with each pass of the for loop the line below essentially 
        # appends the data from $info to the $report array 
        $report+=$info
    }

# display the results in PowerShell
# comment out the line below if you simply want to export to csv
$report | ft

# export the report to a csv file
$report | Export-Csv $path -NoTypeInformation -Append
}

# launch the report
ii $path
# the end
